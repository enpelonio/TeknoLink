# Generated by Django 3.1.1 on 2020-11-18 09:25

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('isTask', models.BooleanField()),
                ('valid_until_date', models.DateField(null=True)),
                ('activity_type', models.CharField(default='Announcement', max_length=50)),
            ],
            options={
                'db_table': 'Activity',
            },
        ),
        migrations.CreateModel(
            name='Activity_Status',
            fields=[
                ('name', models.CharField(max_length=20, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Activity_Status',
            },
        ),
        migrations.CreateModel(
            name='Activity_Student_Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.IntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('review_datetime', models.DateTimeField(auto_now_add=True)),
                ('activity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.activity')),
            ],
            options={
                'db_table': 'Activity_Student_Review',
            },
        ),
        migrations.CreateModel(
            name='Chat_Room',
            fields=[
                ('room_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Chat_Room',
            },
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'College',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'Company',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('start_time', models.DateTimeField(auto_now=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_recurring', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'Event',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'Job',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('send_datetime', models.DateTimeField(auto_now_add=True)),
                ('room_owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.chat_room')),
            ],
            options={
                'db_table': 'Message',
            },
        ),
        migrations.CreateModel(
            name='Milestone_Type',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Miletone_Type',
            },
        ),
        migrations.CreateModel(
            name='Notification_Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Notification_Type',
            },
        ),
        migrations.CreateModel(
            name='Post_Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Post_Report',
            },
        ),
        migrations.CreateModel(
            name='Report_Type',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Report_Type',
            },
        ),
        migrations.CreateModel(
            name='Schedule_Type',
            fields=[
                ('schedule_type', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Schedule_Type',
            },
        ),
        migrations.CreateModel(
            name='Skill_Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'Skill_Category',
            },
        ),
        migrations.CreateModel(
            name='Skill_Training_Intensity',
            fields=[
                ('intensity', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Skill_Training_Intensity',
            },
        ),
        migrations.CreateModel(
            name='Student_Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('room_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.chat_room')),
            ],
            options={
                'db_table': 'Student_Post',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.CharField(default=django.utils.timezone.now, max_length=50, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=25)),
                ('user_type', models.CharField(default='Student', max_length=25)),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='User_Contact_Number',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_number', models.CharField(max_length=11)),
            ],
            options={
                'db_table': 'User_Contact_Number',
            },
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='Creator.user')),
                ('date_created', models.DateField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('isAdmin', models.BooleanField()),
                ('isOffice', models.BooleanField()),
                ('description', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('video_cover', models.FileField(blank=True, null=True, upload_to='')),
                ('image_cover', models.ImageField(blank=True, null=True, upload_to='')),
                ('isDeleted', models.BooleanField(default=False)),
                ('create_admin_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='create_admin_id_set', to='Creator.community')),
                ('delete_admin_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delete_admin_id_set', to='Creator.community')),
            ],
            options={
                'db_table': 'Community',
            },
            bases=('Creator.user',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Creator.user')),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('street_address', models.CharField(blank=True, max_length=100, null=True)),
                ('brgy_address', models.CharField(blank=True, max_length=100, null=True)),
                ('city_address', models.CharField(blank=True, max_length=100, null=True)),
                ('province_address', models.CharField(blank=True, max_length=100, null=True)),
                ('zip_address', models.CharField(max_length=20)),
                ('country_address', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'Student',
            },
            bases=('Creator.user',),
        ),
        migrations.CreateModel(
            name='Student_Post_File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_file', models.FileField(upload_to='')),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.student_post')),
            ],
            options={
                'db_table': 'Student_Post_File',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.skill_category')),
            ],
            options={
                'db_table': 'Skill',
            },
        ),
        migrations.CreateModel(
            name='Review_File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_file', models.FileField(upload_to='')),
                ('review_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.activity_student_review')),
            ],
            options={
                'db_table': 'Review_File',
            },
        ),
        migrations.CreateModel(
            name='Report_File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_file', models.FileField(upload_to='')),
                ('report_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.post_report')),
            ],
            options={
                'db_table': 'Report_File',
            },
        ),
        migrations.AddField(
            model_name='post_report',
            name='post_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_id', to='Creator.student_post'),
        ),
        migrations.AddField(
            model_name='post_report',
            name='report_type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.report_type'),
        ),
        migrations.AddField(
            model_name='post_report',
            name='reporter_student_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reporter_student_id', to='Creator.student_post'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('send_datetime', models.DateTimeField(auto_now_add=True)),
                ('isRead', models.BooleanField(default=False)),
                ('text', models.CharField(max_length=50)),
                ('direct_link', models.TextField(blank=True, null=True)),
                ('receiver_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver_user_id', to='Creator.user')),
                ('sender_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender_user_id', to='Creator.user')),
                ('type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.notification_type')),
            ],
            options={
                'db_table': 'Notification',
            },
        ),
        migrations.CreateModel(
            name='Message_File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_file', models.FileField(upload_to='')),
                ('message_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.message')),
            ],
            options={
                'db_table': 'Message_File',
            },
        ),
        migrations.AddField(
            model_name='message',
            name='sender_user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.user'),
        ),
        migrations.CreateModel(
            name='Job_Require_Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.job')),
                ('skill_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.skill')),
            ],
            options={
                'db_table': 'Job_require_Skill',
            },
        ),
        migrations.CreateModel(
            name='Job_Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('picture', models.ImageField(upload_to='')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.job')),
            ],
            options={
                'db_table': 'Job_Person',
            },
        ),
        migrations.CreateModel(
            name='Job_File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_file', models.FileField(upload_to='')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.job')),
            ],
            options={
                'db_table': 'Job_File',
            },
        ),
        migrations.CreateModel(
            name='Event_Train_Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_points', models.IntegerField()),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.event')),
                ('skill_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.skill')),
                ('training_intensity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.skill_training_intensity')),
            ],
            options={
                'db_table': 'Event_Train_Skill',
            },
        ),
        migrations.CreateModel(
            name='Event_Schedule_Pattern',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('onMonday', models.BooleanField()),
                ('onTuesday', models.BooleanField()),
                ('onWednesDay', models.BooleanField()),
                ('onThursday', models.BooleanField()),
                ('onFriday', models.BooleanField()),
                ('onSaturday', models.BooleanField()),
                ('onSunday', models.BooleanField()),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.event')),
                ('schedule_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.schedule_type')),
            ],
            options={
                'db_table': 'Event_Schedule_Pattern',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('college_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.college')),
            ],
            options={
                'db_table': 'Department',
            },
        ),
        migrations.CreateModel(
            name='Company_Want_Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.company')),
                ('skill_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.skill')),
            ],
            options={
                'db_table': 'Company_Want_Skill',
            },
        ),
        migrations.CreateModel(
            name='Company_File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_file', models.FileField(upload_to='')),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.company')),
            ],
            options={
                'db_table': 'Company_File',
            },
        ),
        migrations.CreateModel(
            name='Company_Demand_Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demand_level', models.CharField(max_length=20)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.company')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.job')),
            ],
            options={
                'db_table': 'Company_Demand_Job',
            },
        ),
        migrations.CreateModel(
            name='Chat_Room_Participants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.chat_room')),
            ],
            options={
                'db_table': 'Chat_Room_Participants',
            },
        ),
        migrations.AddField(
            model_name='activity',
            name='chat_room_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.chat_room'),
        ),
        migrations.AddField(
            model_name='activity',
            name='parent_activity_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Creator.activity'),
        ),
        migrations.AddField(
            model_name='activity',
            name='status_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.activity_status'),
        ),
        migrations.CreateModel(
            name='Student_Watch_Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.skill')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.student')),
            ],
            options={
                'db_table': 'Student_Watch_Skill',
            },
        ),
        migrations.CreateModel(
            name='Student_Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_schedule_pattern_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.event_schedule_pattern')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.student')),
            ],
            options={
                'db_table': 'Student_Schedule',
            },
        ),
        migrations.CreateModel(
            name='Student_Post_Target',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField()),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.student_post')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.student')),
            ],
            options={
                'db_table': 'Student_Post_Target',
            },
        ),
        migrations.AddField(
            model_name='student_post',
            name='creator_student_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.student'),
        ),
        migrations.CreateModel(
            name='Student_Possess_Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
                ('points_in_level', models.IntegerField()),
                ('points_to_next_level', models.IntegerField()),
                ('skill_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.skill')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.student')),
            ],
            options={
                'db_table': 'Student_Possess_Skill',
            },
        ),
        migrations.CreateModel(
            name='Student_Community_Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscribe_datetime', models.DateTimeField(auto_now_add=True)),
                ('community_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.community')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.student')),
            ],
            options={
                'db_table': 'Student_Community_Subscription',
            },
        ),
        migrations.CreateModel(
            name='Student_Aim_Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.job')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.student')),
            ],
            options={
                'db_table': 'Student_Aim_Job',
            },
        ),
        migrations.AddField(
            model_name='student',
            name='department_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.department'),
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('milestone_datetime', models.DateField(auto_now_add=True)),
                ('directlink', models.TextField()),
                ('milestone_photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('milestone_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.milestone_type')),
                ('owner_student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.student')),
            ],
            options={
                'db_table': 'Milestone',
            },
        ),
        migrations.CreateModel(
            name='Community_Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('join_datetime', models.DateTimeField(auto_now_add=True)),
                ('community_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.community')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.student')),
            ],
            options={
                'db_table': 'Community_Member',
            },
        ),
        migrations.CreateModel(
            name='Community_Improve_Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_points_per_week', models.IntegerField()),
                ('skill_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.skill')),
                ('community_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.community')),
            ],
            options={
                'db_table': 'Community_Improve_Skill',
            },
        ),
        migrations.CreateModel(
            name='Activity_Student_Target',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField()),
                ('activity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.activity')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.student')),
            ],
            options={
                'db_table': 'Activity_Student_Target',
            },
        ),
        migrations.AddField(
            model_name='activity_student_review',
            name='student_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.student'),
        ),
        migrations.CreateModel(
            name='Activity_Student_Participation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participate_datetime', models.DateTimeField(auto_now_add=True)),
                ('isConfirmed', models.BooleanField(default=False)),
                ('confirm_datetime', models.DateTimeField(null=True)),
                ('activity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.activity')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Creator.student')),
            ],
            options={
                'db_table': 'Activity_Student_Participation',
            },
        ),
        migrations.AddField(
            model_name='activity',
            name='creator_community_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_creator_id', to='Creator.community'),
        ),
        migrations.AddField(
            model_name='activity',
            name='status_admin_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activity_status_admin', to='Creator.community'),
        ),
    ]
